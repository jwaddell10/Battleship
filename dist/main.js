(()=>{"use strict";class s{constructor(s,t,i){this.length=s,this.numberOfHits=t,this.isSunk=i}createShip(){const t=new s;console.log(t,"this is a ship")}shipWasHit(){return this.numberOfHits++,console.log(this.numberOfHits,"this is the # of hits"),this.numberOfHits}shipWasSunk(s){return this.numberOfHits===this.length?(console.log(s,"this ship is sunk"),!0):(console.log(s,"this ship is not sunk"),!1)}}const t=new s(4,0,!1);t.shipWasHit(),t.shipWasHit();const i=s;class r{constructor(s){this.gameBoardArray=[],this.shipLocation=s}createBoard(){for(let s=0;s<10;s++){this.gameBoardArray[s]=[];for(let t=0;t<10;t++)this.gameBoardArray[s][t]="."}return console.log(this.gameBoardArray,"this is gameboardarray from createboard"),this.gameBoardArray}placeShips(){const s=new r([0,0]);s.createBoard(),console.log(s,"this is gameboard1 after create board");const t=new i(4,0,!1);console.log(t,"this is my created ship")}}(new r).placeShips()})();